name: Test Build

# Trigger on pull requests and pushes to main branch
on:
  pull_request:
  push:
    branches:
      - main

jobs:
  test-build:
    name: Test build on ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    
    runs-on: ${{ matrix.os }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Node.js 22.x
        uses: actions/setup-node@v4
        with:
          node-version: '22.x'
      
      - name: Set up Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      
      # Linux-specific: Install gcc
      - name: Install system dependencies (Linux)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential
      
      # Windows-specific: Configure MSVC
      - name: Configure MSVC environment (Windows)
        if: runner.os == 'Windows'
        uses: ilammy/msvc-dev-cmd@v1
      
      - name: Install tree-sitter-cli
        run: npm install -g tree-sitter-cli
      
      - name: Install npm dependencies
        run: npm install
      
      - name: Generate tree-sitter parser
        run: tree-sitter generate
      
      - name: Build TypeScript indexer
        run: npm run build:indexer
      
      - name: Install build tools
        run: pip install build wheel
      
      - name: Build wheel package
        run: python -m build --wheel
      
      - name: List built packages
        shell: bash
        run: |
          echo "=== Built packages ==="
          ls -lh dist/
      
      - name: Test installation
        shell: bash
        run: |
          # Install the built wheel
          pip install dist/*.whl
          
          # Verify installation
          python -c "import move_fcg_analyzer; print(f'Successfully imported move_fcg_analyzer version {move_fcg_analyzer.__version__}')"
      
      - name: Test CLI functionality
        shell: bash
        run: |
          # Test CLI help
          move-fcg-analyzer --help
          
          # Test CLI with actual project (if test data exists)
          if [ -d "test/caas-framework" ]; then
            echo "Testing with caas-framework..."
            move-fcg-analyzer test/caas-framework grant_read_authorization
          else
            echo "Test data not found, skipping functional test"
          fi
      
      - name: Test Python API
        shell: bash
        run: |
          python -c "
          from move_fcg_analyzer import MoveFunctionAnalyzer
          import os
          
          print('Testing Python API...')
          analyzer = MoveFunctionAnalyzer()
          
          # Test with actual project if available
          if os.path.exists('test/caas-framework'):
              print('Running analysis on test project...')
              result = analyzer.analyze_raw('test/caas-framework', 'grant_read_authorization')
              assert result is not None, 'Analysis returned None'
              assert 'function' in result, 'Result missing function key'
              print('âœ“ Python API test passed')
          else:
              print('Test data not found, skipping functional test')
          "
