name: Build and Publish Wheels

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      
      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel==2.16.2
      
      - name: Build wheels
        run: python -m cibuildwheel --output-dir wheelhouse
        env:
          # Build for Python 3.8-3.12
          CIBW_BUILD: cp38-* cp39-* cp310-* cp311-* cp312-*
          # Skip 32-bit builds and musl on Linux
          CIBW_SKIP: "*-win32 *-manylinux_i686 *-musllinux_*"
          # Install dependencies
          CIBW_BEFORE_BUILD: pip install setuptools wheel
          # Run simple import test after build
          CIBW_TEST_REQUIRES: tree-sitter
          CIBW_TEST_COMMAND: python -c "import tree_sitter_move_on_aptos; import move_fcg_analyzer; print('âœ… Import successful')"
          # Increase build verbosity to see errors
          CIBW_BUILD_VERBOSITY: 1
      
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}
          path: ./wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      
      - name: Build sdist
        run: |
          python -m pip install build
          python -m build --sdist
      
      - name: Upload sdist
        uses: actions/upload-artifact@v4
        with:
          name: sdist
          path: dist/*.tar.gz

  publish:
    name: Publish to PyPI
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist
          merge-multiple: true
      
      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
