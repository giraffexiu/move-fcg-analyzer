name: Publish PyPI (Cross OS, Clean)

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build-wheels:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install build tools (Linux)
        if: startsWith(matrix.os, 'ubuntu')
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential python3-dev

      - name: Install dependencies and build TS
        run: |
          npm ci
          npm run build:indexer

      - name: Prepare Python package contents
        run: |
          node -e "const fs=require('fs');const path=require('path');const src='dist';const dst=path.join('move_fcg_analyzer','dist');fs.rmSync(dst,{recursive:true,force:true});fs.mkdirSync(dst,{recursive:true});fs.cpSync(src,dst,{recursive:true});const nodeSrc=path.join('build','Release','tree_sitter_move_binding.node');const nodeDstDir=path.join('move_fcg_analyzer','build','Release');if(fs.existsSync(nodeSrc)){fs.mkdirSync(nodeDstDir,{recursive:true});fs.copyFileSync(nodeSrc,path.join(nodeDstDir,'tree_sitter_move_binding.node'));}"

      - name: Build wheel
        run: |
          python -m pip install --upgrade pip
          python -m pip install build
          python -m build --wheel

      - name: Upload wheel artifact
        uses: actions/upload-artifact@v4
        with:
          name: wheel-${{ matrix.os }}
          path: ./dist/*.whl

  build-sdist:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install build tools
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential python3-dev

      - name: Build TS and prepare package
        run: |
          npm ci
          npm run build:indexer
          node -e "const fs=require('fs');const path=require('path');const src='dist';const dst=path.join('move_fcg_analyzer','dist');fs.rmSync(dst,{recursive:true,force:true});fs.mkdirSync(dst,{recursive:true});fs.cpSync(src,dst,{recursive:true});const nodeSrc=path.join('build','Release','tree_sitter_move_binding.node');const nodeDstDir=path.join('move_fcg_analyzer','build','Release');if(fs.existsSync(nodeSrc)){fs.mkdirSync(nodeDstDir,{recursive:true});fs.copyFileSync(nodeSrc,path.join(nodeDstDir,'tree_sitter_move_binding.node'));}"

      - name: Build sdist
        run: |
          python -m pip install build
          python -m build --sdist

      - name: Upload sdist artifact
        uses: actions/upload-artifact@v4
        with:
          name: sdist
          path: dist/*.tar.gz

  publish:
    needs: [build-wheels, build-sdist]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist
          merge-multiple: true

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}